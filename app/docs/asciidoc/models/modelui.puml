@startuml model
title <size:30><b>Diagramme de classes ui</b></size>
legend
    |= Couleur |= Description |
    | <size:11><back:#grey>           </back></size>| Les classes qui ne sont pas encore utilis√©es |
endlegend

package app{

  package ui{

    package addgroup{

        class AddGroupActivity extends AppCompatActivity{
            - nomGroupeEditText : EditText
            - creerButton : Button
            - addGroupViewModel: AddGroupViewModel

            onCreate(savedInstanceState : Bundle) : void
        }

        class AddGroupViewModel extends ViewModel{
            - TAG : String
            - isGroupCreated : MutableLiveData<Boolean>

            + isGroupCreated() : MutableLiveData<Boolean>
            - chechGroupExists(nomGroupe : String) : void
            - createGroupe(nomGroupe : String): void
            + chechGroupExistsAndCreate(nomGroupe): void
        }
    }
        'fin addgroup'

  	package addpublication{

        class AddPublicationActivity extends AppCompatActivity{
              addPublicationViewModel : AddPublicationViewModel
             - titreMusiqueEditText : EditText
             - youtubeVideoIdEditText : EditText
             - publierButton : Button
             - progressBar : ProgressBar;

             + onCreate(savedInstanceState : Bundle) :void
        }

        class AddPublicationViewModel extends ViewModel{
            - TAG : String
              client : OkHttpClient
            - isPublicationSaved : MutableLiveData<Boolean>
            - isLoading : MutableLiveData<Boolean>

            + isPublicationSaved() : MutableLiveData<Boolean>
            + isLoading() : MutableLiveData<Boolean>

            savePublication(titre : String, videoId : String) : void
            addPublication(titre : String, videoId : String) : void
        }

        AddPublicationActivity -[hidden]- AddPublicationViewModel
  	}
    'fin addpublication'

    package listgroup{

        class GroupeAdapter extends RecyclerView{
            + groupeList: List<Group>

            + this : (groupeList: List<Groupe>)


            + onCreateViewHolder(parent : ViewGroup, viewType : int): GroupeViewHolder
            + onBindViewHolder(holder : GroupeViewHolder, position: int): void
            + getItemCount() : int

            class GroupeViewHolder extends RecyclerView.ViewHolder{
                 groupNameTextView : TextView

                + this : (itemView : View)
            }
        }

        class ListGroupActivity extends AppCompatActivity {
            - addGroupButton : FloatingActionButton
            - groupeRecyclerView : RecyclerView
            - adapter : RecyclerView.Adapter
            - layoutManager : RecyclerView.LayoutManager
            - viewModel : ListGroupViewModel
            - logoutButton : Button

            # onCreate(savedInstanceState : Bundle): void
        }

        class ListGroupViewModel{
            - groupesLiveData : MutableLiveData<List<Group>>

            + getGroupesLiveData() : MutableLiveData<List<Group>>
            + loadGroupes() : void
        }
    }
     'fin listgroup'

  	package login{

    	  class LoggedInUserView #grey{

          }

          class LoginActivity extends AppCompatActivity implements View.OnClickListener{
               - TAG : String
               - loginViewModel : LoginViewModel
               - usernameEditText : EditText
               - passwordEditText: EditText
               - loginButton: Button
               - new_count:TextView
               - mdpo: TextView
               - loadingProgressBar: ProgressBar
               - auth: FirebaseAuth

               + onCreate(savedInstanceState : Bundle): void
               - updateUiWithUser( model: LoggedInUserView): void
               - showLoginFailed(errorString : @StringRes Integer): void
               - showLoginFailed(@StringRes Integer errorString): void
               + onClick(v :View): void
               - loginUser(): void
          }

          class LoginFormState #grey{}

          class LoginResult #grey{}

          class LoginViewModel #grey{}

          class LoginViewModelFactory #grey{}

          LoginActivity -[hidden]- LoginFormState
          LoginFormState -[hidden]- LoginResult
          LoginResult -[hidden]- LoginViewModel
          LoginViewModel -[hidden]- LoginViewModelFactory
          LoginViewModelFactory -[hidden]- LoggedInUserView

    }
    'fin login'

    package main{

        class MainActivity extends AppCompatActivity{
            - newPublicationButton : FloatingActionButton
            - search_btn: FloatingActionButton
            - publicationRecyclerView: RecyclerView
            - adapter: RecyclerView.Adapter
            - layoutManager: RecyclerView.LayoutManager
            - sortTitre: Button
            - sortDate: Button
            - sortLike: Button
            - logout: Button

            + onCreate(savedInstanceState : Bundle): void
        }

        class MainViewModel extends ViewModel{
            - TAG : String
             sortTitre : Button
             publications : MutableLiveData<List<Publication>>

             getPublications() : MutableLiveData<List<Publication>>
             loadPublicationsTitre() : void
             loadPublicationsDate(): void
             loadPublicationsLike(): void
        }

        class PublicationAdapter extends RecyclerView.Adapter{
            - publications : List<Publication>

            + this : (publications : List<Publication>)

            + onCreateViewHolder(parent :@NonNull ViewGroup, viewType: int): PublicationViewHolder
            + onBindViewHolder(holder: @NonNull final PublicationViewHolder , position: int): void
            + getItemCount(): int

            class PublicationViewHolder extends RecyclerView.ViewHolder{
                   titreTextView: TextView
                   miniatureImageView: ImageView
                   likeCountTextView: TextView
                   dislikeCountTextView: TextView
                   likeButton: LinearLayout
                   dislikeButton: LinearLayout

                   + this: (v: View)
            }
          }
          MainActivity -[hidden]- MainViewModel
          MainViewModel -[hidden]- PublicationAdapter

     }
     'fin main'

    package publication{

        class CommentaireAdapater extends RecyclerView.Adapter {
            - commentaires: List<Commentaire>

             + this: (commentaire : List<Commentaire>)

              + onCreateViewHolder(parent :@NonNull ViewGroup, viewType: int): CommentaireViewHolder
              + onBindViewHolder(holder: @NonNull final CommentaireViewHolder , position: int): void
              + getItemCount(): int
        }


        class PublicationActivtiy extends AppCompatActivity{
               titreTextView: TextView
               miniatureImageView: ImageView
               likeCountTextView: TextView
               dislikeCountTextView: TextView
               likeButton: LinearLayout
               dislikeButton:LinearLayout
               commentaireEditText: EditText
               commenterButton: Button
               publication: Publication
               - commentaireRecyclerView:  RecyclerView
               - adapter:  RecyclerView.Adapter
               - layoutManager: RecyclerView.LayoutManager

               + onCreate(savedInstanceState : Bundle): void
        }

        class PublicationViewModel extends ViewModel{
            - publication: MutableLiveData<Publication>
            - commentaires: MutableLiveData<Commentaire>

            + getPublication(): MutableLiveData<Publication>
            + getCommentaires(): MutableLiveData<Commentaire>
            + loadPublication(publicationId : String): void
            + loadCommentaires(publicationId : String): void
            + createCommentaires(publicationId : String, content : String): void
        }
    }
     'fin publication'

    package register{

    	class RegisterActivity extends AppCompatActivity implements View.OnClickListener{
                - TAG: String
                - uPrenom: EditText
                - uNom:  EditText
                - uPseudo:  EditText
                - uEmail: EditText
                - uMdp: EditText
                - LoginBtn:TextView
                - inscription: Button
                - login: Button
                - mAuth: FirebaseAuth
                - prgB: ProgressBar
                - btn_groupe: RadioGroup
                - role: RadioButton
                - registerViewModel: RegisterViewModel

                + onCreate(savedInstanceState : Bundle): void
                + onClick(v : View): void
                + registerUser(): void
        }

          class RegisterFormState #grey{}

          class RegisterViewModel #grey extends ViewModel{}

          RegisterActivity -[hidden]- RegisterViewModel
          RegisterViewModel -[hidden]- RegisterFormState
    }
     'fin register'

    package search{

        class SearchActivity extends AppCompatActivity {
            - recherche: EditText
            - btn_recherche: ImageButton
            - accueil: ImageButton
            - liste_pub: RecyclerView
            - adapter: RecyclerView.Adapter
            - layoutManager: RecyclerView.LayoutManager
            - searchViewModel: SearchViewModel

            + onCreate(savedInstanceState : Bundle): void

        }

        class SearchViewModel{
              - publication: MutableLiveData<Publication>

              + getPublications(): MutableLiveData<Publication>
              searchPublicationsTitle(titre: String): void
        }
        SearchActivity -[hidden]- SearchViewModel
    }
    'fin search'
@enduml